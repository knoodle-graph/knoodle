name: "CodeQL"

on:
  push:
    branches: [ main ]
    paths: [source/**]
  pull_request:
    branches: [ main ]
    paths: [source/**]
  schedule:
    - cron: '30 1 * * *'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Vulkan
        shell: bash
        run: |
          sudo bash ${{github.workspace}}/scripts/${{matrix.vk-script}}

      - name: Setup Vulkan SDK
        shell: bash
        run: |
          sudo bash ${{github.workspace}}/scripts/install_vulkan_ubuntu.sh

      - name: Verify Vulkan
        id: check-vulkan
        continue-on-error: true
        run: vulkaninfo

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          source-root: source

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        run: >-
          cmake
          -G Ninja
          -S "${{github.workspace}}"
          -B "${{github.workspace}}/build"
          -DCMAKE_BUILD_TYPE=${{matrix.configuration}}
          -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON
          -DCMAKE_CXX_COMPILER=${{ matrix.cxx }}
          -DKNOODLE_WITH_VULKAN=${{ steps.check-vulkan.outcome == 'success' && ON || OFF }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
