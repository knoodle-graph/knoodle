name: Linux Build CI (Arm64)

on:
  push:
    branches: [main]
    paths-ignore:
      - 'doc/**'
      - 'misc/**'
      - '.issuetracker'
      - 'CODE_OF_CONDUCT.md'
      - 'CONTRIBUTING.md'
      - 'knoodle-splash.svg'
      - 'LICENSE.txt'
      - 'README.md'
  pull_request:
    branches: [main]
    paths-ignore:
      - 'doc/**'
      - 'misc/**'
      - '.issuetracker'
      - 'CODE_OF_CONDUCT.md'
      - 'CONTRIBUTING.md'
      - 'knoodle-splash.svg'
      - 'LICENSE.txt'
      - 'README.md'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        configuration: [Debug, Release]
        compiler: [gcc, clang]
        include:
          - compiler: gcc
            cc: gcc
            cxx: g++
          - compiler: clang
            cc: clang
            cxx: clang++

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Dependencies
      run: >-
        sudo apt update -y &&
        sudo apt install -y
        cmake
        g++
        clang
        build-essential
        ninja-build

    - name: Setup Vulkan SDK
      shell: bash
      continue-on-error: true
      run: |
        sudo bash ${{github.workspace}}/scripts/install_vulkan_arm64.sh

    - name: Verify Vulkan
      id: check-vulkan
      continue-on-error: true
      run: vulkaninfo

    - name: Configure CMake
      run: >-
        cmake
        -G Ninja
        -S .
        -B build
        -DCMAKE_TOOLCHAIN_FILE=./cmake/toolchains/toolchain-linux-arm64.cmake
        -DCMAKE_BUILD_TYPE=${{matrix.configuration}}
        -DCMAKE_CXX_COMPILER=${{ matrix.cxx }}
        -DKNOODLE_WITH_VULKAN=${{ steps.check-vulkan.outcome == 'success' && 'ON' || 'OFF' }}

    - name: Build
      run: |
        cmake --build build --config ${{matrix.configuration}}

    - name: Install
      run: |
        cmake --install build --config ${{matrix.configuration}} --prefix install

    - uses: actions/upload-artifact@v4
      with:
        name: artifact-linux-arm64-${{matrix.configuration}}-${{matrix.compiler}}
        path: build

  test:
    needs: build
    strategy:
      fail-fast: false
      matrix:
        configuration: [Debug, Release]

    runs-on: rasp-arm64

    steps:  
    - uses: actions/download-artifact@v4
      with:
        name: artifact-linux-arm64-${{matrix.configuration}}-Debug
        path: build
    

    - name: Test
      working-directory: "${{github.workspace}}/build"
      run: |
        ctest -C ${{matrix.configuration}} --output-on-failure
