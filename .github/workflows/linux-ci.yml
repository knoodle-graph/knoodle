name: Linux Build CI

on:
  push:
    branches: [main]
    paths-ignore:
      - 'doc/**'
      - 'misc/**'
      - '.issuetracker'
      - 'CODE_OF_CONDUCT.md'
      - 'CONTRIBUTING.md'
      - 'knoodle-splash.svg'
      - 'LICENSE.txt'
      - 'README.md'
  pull_request:
    branches: [main]
    paths-ignore:
      - 'doc/**'
      - 'misc/**'
      - '.issuetracker'
      - 'CODE_OF_CONDUCT.md'
      - 'CONTRIBUTING.md'
      - 'knoodle-splash.svg'
      - 'LICENSE.txt'
      - 'README.md'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        configuration: [Debug, Release]
        arch: [x64, arm64]
        compiler: [gcc, clang]
        include:
          - compiler: gcc
            cc: gcc
            cxx: g++
          - compiler: clang
            cc: clang
            cxx: clang++
          - arch: x64
            os: ubuntu-latest
            vk-script: install_vulkan_ubuntu.sh
          - arch: arm64
            os: rasp-arm64
            vk-script: install_vulkan_raspbian.sh

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Dependencies
      run: >-
        sudo apt update -y &&
        sudo apt install -y
        cmake
        g++
        clang
        build-essential
        ninja-build

    - name: Setup Vulkan SDK
      shell: bash
      run: |
        sudo bash ${{github.workspace}}/scripts/${{matrix.vk-script}}

    - name: Verify Vulkan
      id: check-vulkan
      continue-on-error: true
      run: vulkaninfo

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      run: >-
        cmake
        -G Ninja
        -S "${{github.workspace}}"
        -B "${{github.workspace}}/build"
        -DCMAKE_BUILD_TYPE=${{matrix.configuration}}
        -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON
        -DCMAKE_CXX_COMPILER=${{ matrix.cxx }}
        -DKNOODLE_WITH_VULKAN=${{ steps.check-vulkan.outcome == 'success' && 'ON' || 'OFF' }}


    - name: Build
      working-directory: ${{github.workspace}}/build
      run: |
        cmake --build . --config ${{matrix.configuration}}

    - name: Test
      working-directory: "${{github.workspace}}/build"
      run: |
        ctest -C ${{matrix.configuration}} --output-on-failure
