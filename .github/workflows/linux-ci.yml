name: Linux Build CI

on:
  pull_request:
  push:
    branches: [main]

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        configuration: [Debug, Release]
        compiler: [gcc, clang]
        include:
          - compiler: gcc
            cc: gcc
            cxx: g++
          - compiler: clang
            cc: clang
            cxx: clang++

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Dependencies
      run: >-
        sudo apt update -y &&
        sudo apt install -y
        cmake
        g++
        clang
        build-essential

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      env:
        CC: ${{matrix.cc}}
        CXX: ${{matrix.cxx}}
      run: >-
        cmake
        -S "${{github.workspace}}"
        -B "${{github.workspace}}/build"
        -DCMAKE_BUILD_TYPE=${{matrix.configuration}}
        -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON

    - name: Build
      env:
        CC: ${{matrix.cc}}
        CXX: ${{matrix.cxx}}
      working-directory: ${{github.workspace}}/build
      run: |
        cmake --build . --config ${{matrix.configuration}}

    - name: Test
      env:
        CC: ${{matrix.cc}}
        CXX: ${{matrix.cxx}}
      working-directory: "${{github.workspace}}/build"
      run: |
        ctest -C ${{matrix.configuration}} --output-on-failure

    - name: Create Coverage Reports
      run: |
        sudo apt install -y lcov
        lcov --capture --directory . --output-file coverage.info
        lcov --remove coverage.info '/usr/*' --output-file coverage.info
        lcov --list coverage.info

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        fail_ci_if_error: true
        files: ./coverage.info
        flags: unittests
        token: ${{ secrets.CODECOV_TOKEN }}
